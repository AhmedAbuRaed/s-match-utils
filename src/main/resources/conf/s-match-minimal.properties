# S-Match configuration file for minimal links.

# Linguistic Oracle configuration. The class specified as LinguisticOracle
# should implement ILinguisticOracle interface.
Global.LinguisticOracle=it.unitn.disi.smatch.oracles.wordnet.WordNet

# Sense Matcher configuration. The class specified as SenseMatcher
# should implement ISenseMatcher interface.
Global.SenseMatcher=Global.LinguisticOracle

# Mapping Factory configuration. The class specified as MappingFactory 
# should implement IMappingFactory interface.
#Global.MappingFactory=it.unitn.disi.smatch.data.mappings.HashMapping
Global.MappingFactory=it.unitn.disi.smatch.data.mappings.MatrixMapping
Global.MappingFactory.MatrixMapping.matchMatrixFactory=it.unitn.disi.smatch.data.matrices.MatchMatrix
#Global.MappingFactory.MatrixMapping.matchMatrixFactory=it.unitn.disi.smatch.data.matrices.JavaSparseArray

# Mapping Renderer configuration. The class specified as MappingRenderer
# should implement IMappingRenderer interface.
MappingRenderer=it.unitn.disi.smatch.renderers.mapping.PlainMappingRenderer

# Context Loader configuration. The class specified as ContextLoader 
# should implement IContextLoader interface.
ContextLoader=it.unitn.disi.smatch.loaders.context.SimpleXMLContextLoader
ContextLoader.SimpleXMLContextLoader.oracle=Global.LinguisticOracle
#ContextLoader=it.unitn.disi.smatch.loaders.context.TabContextLoader
#ContextLoader.TabContextLoader.key=value

# Matcher Library configuration. The class specified as MatcherLibrary
# should implement IMatcherLibrary interface.
MatcherLibrary=it.unitn.disi.smatch.matchers.element.MatcherLibrary
MatcherLibrary.MatcherLibrary.mappingFactory=Global.MappingFactory
# instance of ISenseMatcher interface
MatcherLibrary.MatcherLibrary.senseMatcher=Global.SenseMatcher
# instance of ILinguisticOracle interface
MatcherLibrary.MatcherLibrary.linguisticOracle=Global.LinguisticOracle
# use only WordNet (false) or use also other matchers (true)
MatcherLibrary.MatcherLibrary.useWeakSemanticsElementLevelMatchersLibrary=true
# list of string matchers, each one should implement IStringBasedElementLevelSemanticMatcher
MatcherLibrary.MatcherLibrary.stringMatchers=it.unitn.disi.smatch.matchers.element.string.Synonym;it.unitn.disi.smatch.matchers.element.string.Prefix;it.unitn.disi.smatch.matchers.element.string.Suffix;it.unitn.disi.smatch.matchers.element.string.NGram;it.unitn.disi.smatch.matchers.element.string.EditDistanceOptimized
# example of a configuration for a specific matcher
#MatcherLibrary.MatcherLibrary.stringMatchers.EditDistance.threshold=0.9
# list of sense and gloss matchers, each one should implement ISenseGlossBasedElementLevelSemanticMatcher
MatcherLibrary.MatcherLibrary.senseGlossMatchers=
# properties to pass down to each sense and gloss matcher
MatcherLibrary.MatcherLibrary.senseGlossMatchers.*.linguisticOracle=Global.LinguisticOracle
MatcherLibrary.MatcherLibrary.senseGlossMatchers.*.senseMatcher=Global.SenseMatcher
# example of a configuration for a specific matcher
#MatcherLibrary.MatcherLibrary.senseGlossMatchers.WNExtendedGloss.threshold=5

# Tree Matcher for minimal links.
TreeMatcher=it.unitn.disi.smatch.matchers.structure.tree.mini.OptimizedStageTreeMatcher
TreeMatcher.OptimizedStageTreeMatcher.mappingFactory=Global.MappingFactory
TreeMatcher.OptimizedStageTreeMatcher.nodeMatcher=it.unitn.disi.smatch.matchers.structure.node.OptimizedStageNodeMatcher
TreeMatcher.OptimizedStageTreeMatcher.nodeMatcher.OptimizedStageNodeMatcher.SATSolver=it.unitn.disi.smatch.deciders.CachingSolver
TreeMatcher.OptimizedStageTreeMatcher.nodeMatcher.OptimizedStageNodeMatcher.SATSolver.CachingSolver.SATSolver=it.unitn.disi.smatch.deciders.SAT4J
